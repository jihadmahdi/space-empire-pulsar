############################################################
#  	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
#handlers= java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= WARNING

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
java.util.logging.FileHandler.pattern = app.log
java.util.logging.FileHandler.limit = 1000
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
#java.util.logging.FileHandler.level = WARNING

# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
#java.util.logging.ConsoleHandler.level = WARNING


############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the vue.KanjiNoSensei logger to only log SEVERE
# messages:
#org.axan.eplib.clientserver.rpc.RpcClientModule.handlers = java.util.logging.ConsoleHandler
#org.axan.eplib.clientserver.rpc.RpcClientModule.level = WARNING

#org.axan.eplib.clientserver.rpc.RpcServerModule.handlers = java.util.logging.ConsoleHandler
#org.axan.eplib.clientserver.rpc.RpcServerModule.level = WARNING

#org.axan.eplib.clientserver.BaseClient.handlers = java.util.logging.ConsoleHandler
#org.axan.eplib.clientserver.BaseClient.level = WARNING

#org.axan.eplib.clientserver.Server.handlers = java.util.logging.ConsoleHandler
#org.axan.eplib.clientserver.Server.level = WARNING
#org.axan.eplib.clientserver.Client.handlers = java.util.logging.ConsoleHandler
#org.axan.eplib.clientserver.Client.level = WARNING

#org.axan.eplib.gameserver.server.GameServer.handlers = java.util.logging.ConsoleHandler
#org.axan.eplib.gameserver.server.GameServer.level = WARNING

#org.axan.eplib.gameserver.client.GameClient.handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler
#org.axan.eplib.gameserver.client.GameClient.level = WARNING

org.axan.sep.server.SEPServer.handlers = java.util.logging.ConsoleHandler
org.axan.sep.server.SEPServer.level = ALL

org.axan.sep.client.SEPClient.handlers = java.util.logging.ConsoleHandler
org.axan.sep.client.SEPClient.level = ALL

org.axan.sep.client.gui.SpaceEmpirePulsarGUI.handlers = java.util.logging.ConsoleHandler
org.axan.sep.client.gui.SpaceEmpirePulsarGUI.level = ALL
